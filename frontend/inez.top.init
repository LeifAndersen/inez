#use "topfind";;
#require "core";;

module S = Solver.Make(Scip);;
module Formula = struct
  include Lang_types;;
  include Lang_abstract;;
end;;

open Core.Std;;

let ctx = S.make_ctx ();;

let constrain g = S.assert_formula ctx g;;

let solve () = S.solve ctx;;

let fresh_int_var () =
  Formula.M_Ivar (S.new_ivar ctx);;

let fresh_bool_var () =
  Formula.F_Atom (Formula.A_Bvar (S.new_bvar ctx));;

let ideref = function
  | Formula.M_Ivar v ->
    S.deref_int ctx v
  | _ ->
    None;;

let bderef = function
  | Formula.F_Atom (Formula.A_Bvar v) ->
    S.deref_bool ctx v
  | _ ->
    None;;
